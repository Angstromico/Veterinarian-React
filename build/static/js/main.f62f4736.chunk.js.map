{"version":3,"sources":["components/context.js","components/header.js","components/AddDate.js","components/Appointmens.js","components/List.js","components/Selected.js","App.js","index.js"],"names":["AppContext","React","createContext","loadJSON","key","JSON","parse","localStorage","getItem","saveJSON","data","setItem","stringify","AppProvider","children","info","useState","petName","ownerName","date","hour","symptoms","id","Date","getTime","values","setValues","alert","setAlert","dates","setDates","message","setMessage","promp","setPromp","selected","setSelected","getId","setGetId","individualElement","setIndividualElement","useEffect","eraseAlert","setTimeout","clearTimeout","length","filtering","filter","newFiltering","choseEliminate","document","querySelector","scrollIntoView","behavior","error","console","log","scrollMessage","Provider","value","createDate","obj","ourDates","filterID","Number","getArrayElement","individual","element","modifyElement","forEach","i","elements","newInfo","useGlobalContext","useContext","Header","title","props","className","AddDate","today","setDate","getDate","toISOString","split","onSubmit","e","preventDefault","newDate","htmlFor","type","placeholder","onChange","target","min","max","role","Appointmens","map","appoitments","onClick","List","Selected","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f62f4736.chunk.js","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\n\nconst AppContext = React.createContext();\n//Local Storage\nconst loadJSON = (key) => key && JSON.parse(localStorage.getItem(key));\nconst saveJSON = (key, data) => localStorage.setItem(key, JSON.stringify(data));\nconst AppProvider = ({ children }) => {\n  const info = loadJSON('info');\n  const [values, setValues] = useState({\n    petName: '',\n    ownerName: '',\n    date: '',\n    hour: '',\n    symptoms: '',\n    id: new Date().getTime(),\n  });\n  const [alert, setAlert] = useState(false);\n  const [dates, setDates] = useState(info ? info : []);\n  const createDate = (obj) => {\n    saveJSON('info', [...dates, obj]);\n    const ourDates = loadJSON('info');\n    setDates(ourDates);\n  };\n  const [message, setMessage] = useState('No Appointments Yet');\n  const [promp, setPromp] = useState(false);\n  const [selected, setSelected] = useState('');\n  const [getId, setGetId] = useState('');\n  const filterID = (id) => {\n    setGetId(Number(id));\n    setPromp(true);\n  };\n  const [individualElement, setIndividualElement] = useState(false);\n\n  const getArrayElement = (id) => {\n    const individual = dates.filter((element) => element.id === id);\n    setGetId(id);\n    setIndividualElement(individual);\n  };\n  const modifyElement = () => {\n    const { petName, ownerName, date, hour, symptoms, id } = values;\n    if (!petName || !ownerName || !date || !hour || !symptoms) {\n      setAlert(true);\n      return;\n    }\n    dates.forEach((element, i) => {\n      if (element.id === getId) {\n        element.petName = petName;\n        element.ownerName = ownerName;\n        element.date = date;\n        element.hour = hour;\n        element.symptoms = symptoms;\n        element.id = id;\n        const elements = {\n          petName: element.petName,\n          ownerName: element.ownerName,\n          date: element.date,\n          hour: element.hour,\n          id: element.id,\n          symptoms: element.symptoms,\n        };\n        const info = loadJSON('info');\n        info[i] = elements;\n        saveJSON('info', info);\n        const newInfo = loadJSON('info');\n        setDates(newInfo);\n      }\n    });\n    setIndividualElement(false);\n  };\n  useEffect(() => {\n    const eraseAlert = setTimeout(() => {\n      setAlert(false);\n    }, 4000);\n    return () => clearTimeout(eraseAlert);\n  }, [alert]);\n\n  useEffect(() => {\n    const changeMessage = () => {\n      if (dates.length === 0) {\n        setMessage('No Appointments Yet');\n      } else {\n        setMessage('Those are our Appointments');\n      }\n    };\n    changeMessage();\n  }, [dates]);\n  useEffect(() => {\n    const choseEliminate = (id) => {\n      const filtering = dates.filter((date) => date.id !== id);\n      if (selected === 'Yes') {\n        saveJSON('info', filtering);\n        const newFiltering = loadJSON('info');\n        setDates(newFiltering);\n        setPromp(false);\n        setSelected('');\n      }\n      if (selected === 'No') {\n        setPromp(false);\n        setSelected('');\n      }\n    };\n    choseEliminate(getId);\n  }, [selected, dates, getId]);\n  useEffect(() => {\n    const scrollMessage = () => {\n      if (promp) {\n        try {\n          const selectedDialog = document.querySelector('#dialog');\n          selectedDialog.scrollIntoView({\n            behavior: 'smooth',\n          });\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    };\n    scrollMessage();\n  }, [promp]);\n  return (\n    <AppContext.Provider\n      value={{\n        values,\n        setValues,\n        createDate,\n        alert,\n        setAlert,\n        message,\n        dates,\n        filterID,\n        promp,\n        setPromp,\n        setSelected,\n        individualElement,\n        getArrayElement,\n        modifyElement,\n      }}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n};\n// make sure use\nexport const useGlobalContext = () => {\n  return useContext(AppContext);\n};\n\nexport { AppContext, AppProvider };\n","import React from 'react';\n\nconst Header = ({ props }) => {\n  const { title } = props;\n  return (\n    <header>\n      <h1 className=\"text-center\">{title}</h1>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport { useGlobalContext } from './context';\nconst AddDate = () => {\n  const {\n    values,\n    setValues,\n    createDate,\n    alert,\n    setAlert,\n    individualElement,\n    modifyElement,\n  } = useGlobalContext();\n  const { petName, ownerName, date, hour, symptoms } = values;\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!petName || !ownerName || !date || !hour || !symptoms) {\n      setAlert(true);\n      return;\n    }\n    const newDate = new Date().getTime();\n    createDate(values);\n\n    setValues({\n      petName: '',\n      ownerName: '',\n      date: '',\n      hour: '',\n      symptoms: '',\n      id: newDate,\n    });\n  };\n  let today = new Date();\n  today = new Date(today.setDate(today.getDate() + 2))\n    .toISOString()\n    .split('T')[0];\n  return (\n    <div className=\"card mt-5\">\n      <div className=\"card-body\">\n        <h2 className=\"card-title mb-5 text-center\">Add Dates</h2>\n        <form onSubmit={individualElement ? modifyElement : handleSubmit}>\n          <div className=\"form-group row\">\n            <label className=\"d-block col-form-label\" htmlFor=\"petName\">\n              Pet Name\n            </label>\n            <div className=\"d-block w-100 mb-4\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Pet Name\"\n                value={petName}\n                onChange={(e) =>\n                  setValues({ ...values, petName: e.target.value })\n                }\n                id=\"petName\"\n              />\n            </div>\n          </div>\n          <div className=\"form-group row\">\n            <label className=\"d-block col-form-label\">Name Owner</label>\n            <div className=\"d-block w-100 mb-4\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Nombre Dueño de la Mascota\"\n                value={ownerName}\n                onChange={(e) =>\n                  setValues({ ...values, ownerName: e.target.value })\n                }\n              />\n            </div>\n          </div>\n\n          <div className=\"form-group row\">\n            <label className=\"d-block w-90 col-form-label\">Date</label>\n            <div className=\"d-block w-90   mb-4 \">\n              <input\n                type=\"date\"\n                className=\"form-control\"\n                value={date}\n                onChange={(e) => setValues({ ...values, date: e.target.value })}\n                min={today}\n              />\n            </div>\n\n            <label className=\"d-block col-form-label\">Hour</label>\n            <div className=\"d-block w-100 mb-4\">\n              <input\n                type=\"time\"\n                className=\"form-control\"\n                value={hour}\n                onChange={(e) => setValues({ ...values, hour: e.target.value })}\n                min=\"09:00\"\n                max=\"18:00\"\n              />\n            </div>\n          </div>\n\n          <div className=\"form-group row\">\n            <label className=\"d-block col-form-label\">Symptoms</label>\n            <div className=\"d-block w-100 mb-4\">\n              <textarea\n                className=\"form-control\"\n                value={symptoms}\n                onChange={(e) =>\n                  setValues({ ...values, symptoms: e.target.value })\n                }\n              ></textarea>\n            </div>\n          </div>\n          <div className=\"form-group row justify-content-end\">\n            <div>\n              <button type=\"submit\" className=\"btn btn-success d-block w-100\">\n                {individualElement\n                  ? `Modify the Pet ${individualElement[0].petName}`\n                  : 'Date'}\n              </button>\n            </div>\n          </div>\n          {alert && (\n            <div className=\"alert alert-danger mt-4 fade-out\" role=\"alert\">\n              <h3 className=\"text-center\">You Must Fill All the Fields</h3>\n            </div>\n          )}\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default AddDate;\n","import React from 'react';\nimport { useGlobalContext } from './context';\nconst Appointmens = () => {\n  const { dates, filterID, getArrayElement } = useGlobalContext();\n  if (dates) {\n    return (\n      <>\n        {dates.map((appoitments) => {\n          const { petName, ownerName, date, hour, symptoms, id } = appoitments;\n          return (\n            <div className=\"media mt-3\" key={id}>\n              <div className=\"media-body\">\n                <h3 className=\"mt-0 text-capitalize\">\n                  <span className=\"font-weight-bold\">Pet Name:</span> {petName}\n                </h3>\n                <h3 className=\"card-text text-capitalize \">\n                  <span className=\"font-weight-bold\">Owner Name: </span>{' '}\n                  {ownerName}\n                </h3>\n                <p className=\"card-text\">\n                  <span className=\"font-weight-bold\">\n                    Date of Appointment:{' '}\n                  </span>{' '}\n                  {date}\n                </p>\n                <p className=\"card-text\">\n                  <span className=\"font-weight-bold\">\n                    Hour of Appointment:{' '}\n                  </span>{' '}\n                  {hour}\n                </p>\n                <p className=\"card-text\">\n                  <span className=\"font-weight-bold\">Clinic Square: </span>{' '}\n                  {symptoms}\n                </p>\n                <div className=\"btn-container\">\n                  <button\n                    onClick={() => filterID(id)}\n                    className=\"btn btn-danger\"\n                  >\n                    Erase &times;\n                  </button>\n                  <button\n                    onClick={() => getArrayElement(id)}\n                    className=\"btn btn-primary\"\n                  >\n                    Modify Element\n                  </button>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </>\n    );\n  } else {\n    return <div></div>;\n  }\n};\n\nexport default Appointmens;\n","import React from 'react';\nimport { useGlobalContext } from './context';\nimport Appointmens from './Appointmens';\nconst List = () => {\n  const { message } = useGlobalContext();\n  return (\n    <div className=\"card mt-5\">\n      <div className=\"card-body\">\n        <h2 className=\"card-title text-center\">{message}</h2>\n        <div className=\"lista-cita\">\n          <Appointmens />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default List;\n","import React from 'react';\nimport { useGlobalContext } from './context';\nconst Selected = () => {\n  const { setSelected } = useGlobalContext();\n  return (\n    <div\n      id=\"dialog\"\n      className=\"dialog p-2 position-absolute top-50 start-50 translate-middle rounded w-100 z-index\"\n    >\n      <h3 className=\"text-center my-3 py-3 text-alert\">\n        Are you sure you Wanna Eliminate this Information?\n      </h3>\n      <div className=\"btn-container\">\n        <button className=\"btn btn-danger\" onClick={() => setSelected('Yes')}>\n          Erase\n        </button>\n        <button className=\"btn btn-success\" onClick={() => setSelected('No')}>\n          Preserve\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Selected;\n","import React from 'react';\nimport Header from './components/header';\nimport Form from './components/AddDate';\nimport List from './components/List';\nimport Selected from './components/Selected';\nimport { useGlobalContext } from './components/context';\nfunction App() {\n  const info = { title: 'Pups Patiens' };\n  const { promp } = useGlobalContext();\n  return (\n    <section\n      className={`App container ${promp ? 'position-relative before' : ''}`}\n    >\n      <Header props={info} />\n      <div className=\"row\">\n        <div className=\"col-md-6\">\n          <Form />\n        </div>\n        <div className=\"col-md-6\">\n          <List />\n        </div>\n      </div>\n      {promp && <Selected />}\n    </section>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport './css/normalize.css';\nimport { AppProvider } from './components/context';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}